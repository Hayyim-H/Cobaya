theory:
  ExtraTheory3:
    python_path: /home/hayyim/Escritorio/Cobaya_Extrap/Likelihoods/MyLike
    requires: [omega_b, omega_cdm, theta_s_100]
    extra_args: 
      #N_ur: 2.00441
      #non_linear: None
      N_ur: 0.00441
      non linear: hmcode
      nonlinear_min_k_max: 20
      N_ncdm: 1
      deg_ncdm: 3
      
  #classy:
  #  requires: [omega_b, omega_cdm, theta_s_100]
  #  extra_args: 
  #    N_ur: 2.00441
      #N_ur: 0.00441
  #    N_ncdm: 1
      #N_ncdm: 3
      
likelihood:
  desi_dr2.desi_bao_all:
    python_path: /home/hayyim/Escritorio/Cobaya_Extrap/CobayaExt/lib64/python3.12/site-packages/cobaya/likelihoods/bao
  Likelihood.CMB_CLASS_Compressed: 
    python_path: /home/hayyim/Escritorio/RUNS_COBAYA/
    requires: [cosmomc_theta, omega_b, ombch2]
  
  #planck_2018_highl_plik.TTTEEE_lite_native: null
  #planck_2018_lowl.TT: null
  #planck_2018_lowl.EE: null
params:
  #N_ur:
  #  value: 'lambda sum_mnu_eff: 2.00441 if sum_mnu_eff >= 0 else 4.03080'
  #  derived: false
  ln_A_s_1e10:
    value: 3.036
    latex: \log(10^{10} A_\mathrm{s})
  A_s:
    derived: 'lambda ln_A_s_1e10: 1e-10*np.exp(ln_A_s_1e10)'
    latex: A_\mathrm{s}
  n_s:
    value: 0.9649
    latex: n_\mathrm{s}
  theta_s_100:
    prior:
      min: 0.5
      max: 10
    ref:
      dist: norm
      loc: 1.0416
      scale: 0.0004
    proposal: 0.0002
    latex: 100\theta_\mathrm{s}
  cosmomc_theta:
    value: 'lambda theta_s_100: theta_s_100/100'
    #derived: 'lambda theta_s_100: theta_s_100/100'
    latex: \theta_\mathrm{MC}
  H0:
    latex: H_0
  omega_b:
    prior:
      min: 0.005
      max: 0.1
    ref:
      dist: norm
      loc: 0.02237
      scale: 0.0001
    proposal: 0.0001
    latex: \Omega_\mathrm{b} h^2
  omega_cdm:
    prior:
      min: 0.001
      max: 0.99
    ref:
      dist: norm
      loc: 0.12
      scale: 0.001
    proposal: 0.0005
    latex: \Omega_\mathrm{c} h^2
  ombch2:
    value: 'lambda omega_cdm, omega_b: omega_cdm+omega_b'
    latex: \Omega_\mathrm{bc} h^2
  Omega_m:
    latex: \Omega_\mathrm{m}
  omegamh2:
    derived: 'lambda Omega_m, H0: Omega_m*((H0/100)**2)'
    latex: \Omega_\mathrm{m} h^2
  sum_mnu_eff:
  #mnu:
  #m_ncdm:
    prior:
      min: -1.667
      max: 1.667
    ref:
      dist: norm
      loc: 0
      scale: 0.05
    proposal: 0.05
    latex: \Sigma m_{\nu, \mathrm{eff}}
    #drop: True
    renames: m_ncdm
  #m_ncdm:
  #  value: "lambda mnu: f'{mnu/3},{mnu/3},{mnu/3}'"
  #  derived: False
  #  latex: m_{\nu, \mathrm{eff}}
  Omega_k:
    latex: \Omega_\mathrm{k}
    value: 0.0
  Omega_Lambda:
    latex: \Omega_{\Lambda}
    #renames: Omega_Lambda
  #YHe:
  #  latex: Y_\mathrm{P}
  tau_reio:
    value: 0.0544
    latex: \tau_\mathrm{reio}
  z_reio:
    latex: z_\mathrm{re}
  age:
    latex: '{\rm{Age}}/\mathrm{Gyr}'
  rdrag:
    latex: r_\mathrm{drag}
    renames: rs_drag
  H0rdrag:
    derived: 'lambda H0, rs_drag: H0 * rs_drag'
    latex: H_0 r_\mathrm{d}
    
sampler:
  mcmc:
    drag: true
    #covmat: auto
    oversample_power: 0.4
    proposal_scale: 1.9
    covmat: /home/hayyim/Escritorio/CLASS_Meff/Cobaya/CHAINS/Positivo.covmat
    covmat_params:
      - theta_s_100
      - omega_b
      - omega_cdm
      - m_ncdm
    learn_proposal: true
    max_tries: 1000
    Rminus1_stop: 0.01

#output: Chains/test9_mnu
output: Chains/Test_time/Extra_PosCov
